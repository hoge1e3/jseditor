extends Base;
native process;
native Math;
native $;
native require;
native requirejs;
native console;
native window;
native localStorage;
native location;
native nwDispatcher;

\runApp() {
    parallel("main");
}

Columns.make(
    ["div",{id:"fileViewer","class":"col-xs-3"},
        ["div",{id:"fileItemList"}]
    ],
    ["div",{id:"mainArea","class":"col-xs-9"},
        ["div",{id:"fileLabel"},"."],
        ["div",{id:"progs"}]
    ]
);

var finder;
(new TMenu).make("JS Editor", [
    {label:"Home",href:"index.html"},
    {label:"ファイル",sub:[
        {label:"新規",id:"newFile",action:"$fileMenu.create"},
        {label:"名前変更",id:"mvFile",action:"$fileMenu.rename"/*mvFile*/},
        {label:"上書き保存",id:"saveFile",action:"$editorSet.save",key:"ctrl+s"},
        {label:"コピー",id:"cpFile",action:"$fileMenu.copy"},
        {label:"閉じる",id:"closeFile",action:"$editorSet.close"},
        {label:"削除", id:"rmFile",action:"$fileMenu.remove"}
    ]},
    {label:"ツール",sub:[
        //{label:"検索",id:"find",action:"$finder.find",key:"ctrl+f"},
        //{label:"新規ツール...",id:"newTool"}
        {label:"TonyuC", id:"tonyuC",action:tonyuC, key:"f9"},
        {label:"実行", id:"run",action:runHTML, key:"f5"}
        
    ]},
    {label:"ウィンドウ",sub:[
        {label:"新規ウィンドウ",id:"newWindow",action:newWindow},
        {label:"新規ウィンドウ＆Home",id:"newWindowHome",action:newWindowHome},
        //{label:"ブックマーク...",id:"bookmark",action:"$bookmark.open"},
        {label:"フォルダを開く",id:"openFolder",action:openFolder}
    ]},
    /*{label:"実行",sub:[
          {label:"実行(F9)",id:"runMenu",action:run},
    ]},*/
    {label:"設定",sub:[
          {label:"環境設定...",
            id:"textsize",action:"$desktopEnvEditor.dialog"},
          /*{label:"エディタの文字の大きさ...",
            id:"textsize",action:textSize},*/
          {label:"ワークスペース切り替え...",
            id:"setEtc",action:setEtc}
    ]}
]);
var fileMenu;
var es;
var etc=new Etc;
$etc=etc;
$desktopEnvEditor=new DesktopEnv;
update(10);

var prjs=readJSON(etc.rel("projects.json"));
var prj=new JSEProject(prjs, Util.getQueryString("prj"));
$jsePrj=prj;
$("title").text(Util.getQueryString("prj")+" - JS Editor");
//var name, path, www, tonyuC, reqConf;
var tc=new TonyuC(prj);
var fl=$fileList=new FileList($("#fileItemList")) {
    open:function (f) {
        console.log("opening",f);
        es.save();
        es.open(f);
    }
};
$bookmark=new Bookmark{
    file:etc.rel("bookmark.json"),
    fileList:fl
};
\runHTML() {
    var f=$editorSet.curFile;
    var genID=""+Math.random();
    window.open("file://"+f.path(),genID,
    'width=800,height=400,menubar=yes,location=yes,resizable=yes,scrollbars=yes,status=yes');

}
\setEtc() {
    parallel(setEtcP);
}
\setEtcP() {
    var np=prompt("ワークスペースのディレクトリ", localStorage.etc||"");
    if (np) {
        localStorage.etc=np;
        location.reload();
    }
}
function tonyuC() {
    tc.parallel("compile");
}
function newWindow() {
    var genID=""+Math.random();
    window.open(location.href,genID,
    'width=800,height=400,menubar=yes,location=yes,resizable=yes,scrollbars=yes,status=yes');
}
function newWindowHome() {
    var genID=""+Math.random();
    window.open(location.href.replace(/\?.*/,""),genID,
    'width=800,height=400,menubar=yes,location=yes,resizable=yes,scrollbars=yes,status=yes');
}

var screenH,editorH;
function onResize() {
    var h=$(window).height()-$("#navBar").height()-$("#tabTop").height();
    h-=20;
    screenH=h;
    editorH=screenH-$("#fileLabel").height();
    if (es) es.options.height=editorH;
    $("#progs pre").css("height",editorH+"px");
    console.log("canvas size",h, editorH);
    $("#fileItemList").height(h);
}
onResize();
$(window).resize(onResize);
requirejs(["ace"],function (){
    var desktopEnv=$desktopEnvEditor.model;
    print("denv",desktopEnv && desktopEnv.editorFontSize || 12);
    console.log("ace loaded:",ace);
    $editorSet=es=new TEditorSet( $("#progs"), $("#fileLabel")) {
        height:editorH, 
        fontSize:( desktopEnv && desktopEnv.editorFontSize || 12 )
    };
    $finder=new Finder;
    if (typeof SplashScreen!="undefined") SplashScreen.hide();
    $fileMenu=fileMenu=new FileMenu({editorSet:es,fileList:fl});
    fl.open(prj.path);
    
    $desktopEnvEditor.on("modelsaved") \(model) {
        print("SAVED",model);
        $editorSet.setFontSize(desktopEnv.editorFontSize);
    };
});
\shouldConfirmClose() {
    var m=($editorSet && $editorSet.allModified()) || [];
    if (m.length>0) {
        return "保存しないで終了しますか？: "+m.map \(f) {
            return f.name();
        }.join(",");
    }
}
\openFolder() {
    // Open a file in file explorer.
    var f=$editorSet.curFile || fl.lastSelected;
    console.log(f);
    if (f) {
        console.log(f.path());
        gui.Shell.showItemInFolder(f.path().replace(/\//g,"\\"));
        return;
    }
}
$(window).on("beforeunload") \(e) {
    var s=shouldConfirmClose();
    if (s) {
        return s;
    } else {
        e.preventDefault();
    }
};
var gui = nwDispatcher.requireNwGui(); 
var win = gui.Window.get();
win.on('close', function() {
    var s=shouldConfirmClose();
    if (s) {
        if (window.confirm(s)) {
           win.close(true);
        }
    } else {
        win.close(true);
    }
});


